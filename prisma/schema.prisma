// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  password String
  name     String?
  image    String?
  accounts Account[]
  sessions Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Form {
  id              Int               @id @default(autoincrement())
  user_id         String
  created_at      DateTime          @default(now())
  name            String
  description     String            @default("")
  content         String            @default("[]")
  published       Boolean           @default(false)
  visits          Int               @default(0)
  submissions     Int               @default(0)
  shareURL        String            @unique @default(uuid())
  FormSubmissions FormSubmissions[]

  @@unique([name, user_id])
}

model FormSubmissions {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  form_id    Int
  form       Form     @relation(fields: [form_id], references: [id], onDelete: Cascade)
  content    String
}
